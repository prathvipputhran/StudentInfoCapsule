import 'package:myfirstproject/cgpa.dart';
import 'controller.dart';
import 'drop_down_helper.dart';
import 'package:flutter/material.dart';


class StudentGPA8 extends StatefulWidget{
  const StudentGPA8({ Key? key }) : super(key: key);
  @override
  State<StudentGPA8> createState() => _StudentGPAState8();
}


class _StudentGPAState8 extends State<StudentGPA8> {



  @override
  Widget build(BuildContext context) {
    List<TextEditingController> _marks = [
      for(int i = 0; i < 4; i++)
        TextEditingController()
    ];

    var _tot = TextEditingController();
    var _avg = TextEditingController();

    List<int> grade = [0, 0, 0, 0];
    num result;
    num sum = 0;
    num avg;


    var size = MediaQuery.of(context).size;
    return Scaffold(
      appBar: AppBar(title: Text("Student Info Capsule"),),
      drawer: Drawer(child: ListView(
        children: [
          UserAccountsDrawerHeader(accountName: Text('name'),
            accountEmail: Text('name.cs20@bmsce.ac.in'),
            currentAccountPicture: CircleAvatar(
              child: ClipOval(
                child: Image.network(
                  'https://cdn.onlinewebfonts.com/svg/img_329115.png',
                  fit: BoxFit.cover,
                  width: 90,
                  height: 90,
                ),
              ),
            ),
            decoration: BoxDecoration(color: Colors.blue),
          ),
          ListTile(
            leading: Icon(Icons.home),
            title: Text("HomePage", style: TextStyle(fontSize: 20),),
          ),
          ListTile(
            leading: Icon(Icons.book),
            title: Text("SGPA Calculator", style: TextStyle(fontSize: 20),),
            onTap: () {
              Navigator.push(context, MaterialPageRoute(builder:
                  (context) => DropDownHelper()
              ));
            },
          ),
          ListTile(
            leading: Icon(Icons.book),
            title: Text("CGPA Calculator", style: TextStyle(fontSize: 20),),
            onTap: () {
              Navigator.push(context, MaterialPageRoute(builder:
                  (context) => StudentCGPA()
              ));
            },
          ),
          ListTile(
            leading: Icon(Icons.school),
            title: Text("Upload Marks Card", style: TextStyle(fontSize: 20),),
          ),
          ListTile(
            leading: Icon(Icons.upload_file),
            title: Text(
              "Upload Activity Certificates", style: TextStyle(fontSize: 20),),
          ),
          ListTile(
            leading: Icon(Icons.line_axis),
            title: Text(
              "Activity Points Tracker", style: TextStyle(fontSize: 20),),
          ),
          ListTile(
            leading: Icon(Icons.logout),
            title: Text("logout", style: TextStyle(fontSize: 20),),
          ),
        ],
      ),),
      body: SingleChildScrollView(
        physics: BouncingScrollPhysics(),
        child: Form(
            key: formKey4,
            child: Container(

              child: Column(
                children: <Widget>[
                  Text('SGPA Calculator sem 8', style: TextStyle(fontSize: 30,
                      color: Colors.indigo,
                      fontWeight: FontWeight.bold),),
                  SizedBox(height: 5,),
                  Row(
                      children: [
                        Expanded(
                          child: Center(
                            child:
                            Text("21CS8PCGCT:", style: TextStyle(fontSize: 15,
                                color: Colors.black)),
                          ),
                        ),
                        Expanded(
                          child:


                          TextFormField(

                              validator: (value) {
                                if (value!.isEmpty) {
                                  return 'please enter marks';
                                }
                                if (value.length > 2) {
                                  return 'invalid marks';
                                }
                                if (int.parse(value) < 0) {
                                  return 'marks cannot be negative';
                                }
                              },
                              controller: _marks[0],
                              decoration: InputDecoration(
                                labelText: "Enter Final Marks",
                                labelStyle: TextStyle(fontSize: 12,
                                    color: Colors.grey.shade400),
                                border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(10)),
                              )
                          ),
                        ),
                      ]
                  ),
                  SizedBox(height: 5,),

                  Row(
                      children: [
                        Expanded(
                          child: Center(
                            child:
                            Text("21CS8OECCT:", style: TextStyle(fontSize: 15,
                                color: Colors.black)),
                          ),
                        ),
                        Expanded(
                          child:

                          TextFormField(

                              validator: (value) {
                                if (value!.isEmpty) {
                                  return 'please enter marks';
                                }
                                if (value.length > 2) {
                                  return 'invalid marks';
                                }
                                if (int.parse(value) < 0) {
                                  return 'marks cannot be negative';
                                }
                              },
                              controller: _marks[1],
                              decoration: InputDecoration(
                                labelText: "Enter Final Marks",
                                labelStyle: TextStyle(fontSize: 12,
                                    color: Colors.grey.shade400),
                                border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(10)),
                              )
                          ),
                        ),
                      ]
                  ),
                  SizedBox(height: 5,),
                  Row(
                      children: [
                        Expanded(
                          child: Center(
                            child:
                            Text("21CS8PWPP2:", style: TextStyle(fontSize: 15,
                                color: Colors.black)),
                          ),
                        ),
                        Expanded(
                          child:

                          TextFormField(

                              validator: (value) {
                                if (value!.isEmpty) {
                                  return 'please enter marks';
                                }
                                if (value.length > 2) {
                                  return 'invalid marks';
                                }
                                if (int.parse(value) < 0) {
                                  return 'marks cannot be negative';
                                }
                              },
                              controller: _marks[2],
                              decoration: InputDecoration(
                                labelText: "Enter Final Marks",
                                labelStyle: TextStyle(fontSize: 12,
                                    color: Colors.grey.shade400),
                                border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(10)),
                              )
                          ),
                        ),
                      ]
                  ),
                  SizedBox(height: 5,),
                  Row(
                      children: [
                        Expanded(
                          child: Center(
                            child:
                            Text("21CS8SRINT:", style: TextStyle(fontSize: 15,
                                color: Colors.black)),
                          ),
                        ),
                        Expanded(
                          child:

                          TextFormField(

                              validator: (value) {
                                if (value!.isEmpty) {
                                  return 'please enter marks';
                                }
                                if (value.length > 2) {
                                  return 'invalid marks';
                                }
                                if (int.parse(value) < 0) {
                                  return 'marks cannot be negative';
                                }
                              },
                              controller: _marks[3],
                              decoration: InputDecoration(
                                labelText: "Enter Final Marks",
                                labelStyle: TextStyle(fontSize: 12,
                                    color: Colors.grey.shade400),
                                border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(10)),
                              )
                          ),
                        ),
                      ]
                  ),
                  SizedBox(height: 5,),


                  GestureDetector
                    (
                      onTap: () {
                        for (int i = 0; i < 4; i++) {
                          if (int.parse(_marks[i].text) >= 90 &&
                              int.parse(_marks[i].text) < 100) {
                            grade[i] = 10;
                          }
                          else if (int.parse(_marks[i].text) >= 80 &&
                              int.parse(_marks[i].text) < 90) {
                            grade[i] = 9;
                          }
                          else if (int.parse(_marks[i].text) >= 70 &&
                              int.parse(_marks[i].text) < 80) {
                            grade[i] = 8;
                          } else if (int.parse(_marks[i].text) >= 60 &&
                              int.parse(_marks[i].text) < 70) {
                            grade[i] = 7;
                          } else if (int.parse(_marks[i].text) >= 50 &&
                              int.parse(_marks[i].text) < 60) {
                            grade[i] = 6;
                          }
                          else if (int.parse(_marks[i].text) >= 40 && int.parse(
                              _marks[i].text) < 50) {
                            grade[i] = 5;
                          }
                          else if (int.parse(_marks[i].text) >= 0 && int.parse(
                              _marks[i].text) < 40) {
                            grade[i] = 0;
                          }
                        }

                        sum = sum + (grade[0] * 2);
                        sum = sum + (grade[1] * 3);
                        sum = sum + (grade[2] * 1);
                        sum = sum + (grade[3] * 10);


                        result = sum;
                        avg = (result / 16.0);
                        _tot.text = result.toString();
                        _avg.text = avg.toString();
                      },
                      child: Container(
                        alignment: Alignment.center,
                        height: size.height / 14,
                        width: size.width / 2,
                        decoration: BoxDecoration(color: Colors.red,
                            borderRadius: BorderRadius.circular(5)),
                        child: Text("Calculate SGPA",
                          style: TextStyle(color: Colors.white,
                              fontWeight: FontWeight.bold),),
                      )
                  ),
                  SizedBox(height: 15,),

                  Row(
                      children: [
                        Expanded(
                          child: Center(
                            child:
                            Text("SGPA:", style: TextStyle(fontSize: 20,
                                color: Colors.black,
                                fontWeight: FontWeight.bold)),
                          ),
                        ),
                        Expanded(
                          child:

                          TextField(
                              controller: _avg,
                              decoration: InputDecoration(
                                  labelText: "SGPA",
                                  labelStyle: TextStyle(fontSize: 12,
                                      color: Colors.grey.shade400),
                                  border: OutlineInputBorder(
                                      borderRadius: BorderRadius.circular(10))
                              )
                          ),
                        ),
                        SizedBox(width: 30),
                      ]
                  ),
                  SizedBox(height: 15,),
                  Row(
                    children: [
                      SizedBox(width: 20),
                      Expanded(child: ElevatedButton(
                          child: Text('Approval'
                          ),
                          onPressed:() {
                            setState(() {
                              if (formKey4.currentState!.validate()) {}
                            });
                          }

                      ),
                      ),
                      SizedBox(width: 50),
                      Expanded(child: ElevatedButton(
                          child: Text('Download'),
                          onPressed: () {
                            setState(() {
                              if (formKey4.currentState!.validate()) {}
                            });
                          }
                      ),
                      ),

                      SizedBox(width: 20),


                    ],
                  )
                ],

              ),

            )
        ),
      ),
    );
  }
}