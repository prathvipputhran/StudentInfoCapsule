import 'package:database/home_screen.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'cgpa.dart';
import 'drop_down_helper.dart';
import 'controller.dart';
import 'package:flutter/material.dart';


//code for designing the UI of our text field where the user writes his email id or password

const kTextFieldDecoration = InputDecoration(
  hintText: 'Enter a value',
  hintStyle: TextStyle(color: Colors.grey),
  contentPadding: EdgeInsets.symmetric(vertical: 10.0, horizontal: 20.0),
  border: OutlineInputBorder(
    borderRadius: BorderRadius.all(Radius.circular(32.0)),
  ),
  enabledBorder: OutlineInputBorder(
    borderSide: BorderSide(color: Colors.lightBlueAccent, width: 1.0),
    borderRadius: BorderRadius.all(Radius.circular(32.0)),
  ),
  focusedBorder: OutlineInputBorder(
    borderSide: BorderSide(color: Colors.lightBlueAccent, width: 2.0),
    borderRadius: BorderRadius.all(Radius.circular(32.0)),
  ),
);

class RegistrationScreen extends StatefulWidget {
  const RegistrationScreen({ Key? key }) : super(key: key);
  @override
  _RegistrationScreenState createState() => _RegistrationScreenState();
}

class _RegistrationScreenState extends State<RegistrationScreen> {
  String _errorMessage = '';
  final _auth = FirebaseAuth.instance;
  late String email;
  late String password;
  bool showSpinner = false;
  bool isEmail(String input) => RegExp(r"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?"
  r"^_`{|}~]+@[bmsce]+\.[ac]+\.[in]").hasMatch(input);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      drawer: Drawer(child: ListView(
        children: [
          UserAccountsDrawerHeader(accountName: Text('name'),
            accountEmail: Text('name.cs20@bmsce.ac.in'),
            currentAccountPicture: CircleAvatar(
              child: ClipOval(
                child: Image.network(
                  'https://cdn.onlinewebfonts.com/svg/img_329115.png',
                  fit: BoxFit.cover,
                  width: 90,
                  height: 90,
                ),
              ),
            ),
            decoration: BoxDecoration(color: Colors.blue),
          ),
          ListTile(
            leading: Icon(Icons.home),
            title: Text("HomePage", style: TextStyle(fontSize: 20),),
          ),
          ListTile(
            leading: Icon(Icons.book),
            title: Text("SGPA Calculator", style: TextStyle(fontSize: 20),),
            onTap: () {
              Navigator.push(context, MaterialPageRoute(builder:
                  (context) => DropDownHelper()
              ));
            },
          ),
          ListTile(
            leading: Icon(Icons.book),
            title: Text("CGPA Calculator", style: TextStyle(fontSize: 20),),
            onTap: () {
              Navigator.push(context, MaterialPageRoute(builder:
                  (context) => StudentCGPA()
              ));
            },
          ),
          ListTile(
            leading: Icon(Icons.school),
            title: Text("Upload Marks Card", style: TextStyle(fontSize: 20),),
          ),
          ListTile(
            leading: Icon(Icons.upload_file),
            title: Text(
              "Upload Activity Certificates", style: TextStyle(fontSize: 20),),
          ),
          ListTile(
            leading: Icon(Icons.line_axis),
            title: Text(
              "Activity Points Tracker", style: TextStyle(fontSize: 20),),
          ),
          ListTile(
            leading: Icon(Icons.logout),
            title: Text("logout", style: TextStyle(fontSize: 20),),
          ),
        ],
      ),),
      backgroundColor: Colors.white,
      body:

        Padding(
          padding: EdgeInsets.symmetric(horizontal: 24.0),
            child: Form(
              key: formKey9,
              child:
                    Column(
            mainAxisAlignment: MainAxisAlignment.center,
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: <Widget>[
              TextFormField(
                  keyboardType: TextInputType.emailAddress,
                  textAlign: TextAlign.center,
                  validator: (value) {
                    email = value!;
                    if (value!.isEmpty) {
                      return 'please enter email id';
                    }
                    if(!isEmail(value)){
                      return 'email invalid';

                    }
                                        //Do something with the user input.
                  },
                  decoration: kTextFieldDecoration.copyWith(
                      hintText: 'Enter your email')),
              SizedBox(
                height: 8.0,
              ),

              TextFormField(

                  obscureText: true,
                  textAlign: TextAlign.center,
                    onChanged: (value) {
                    password = value;

                    //Do something with the user input.
                    },
                    //Do something with the user input.
                  decoration: kTextFieldDecoration.copyWith(
                      hintText: 'Enter your Password')),
              SizedBox(
                height: 24.0,
              ),
              MaterialButton(
                  onPressed: () async {
                  setState(() {
                    if (formKey9.currentState!.validate())
                    showSpinner = true;
                  });
                  try {
                    final newUser = await _auth.createUserWithEmailAndPassword(
                        email: email, password: password);
                    if (newUser != null) {
                      Navigator.pushReplacement(context, MaterialPageRoute(builder: (context)
                      => HomeScreen()));
                    }
                  } catch (e) {
                    print(e);
                  }
                  setState(() {
                    showSpinner = false;
                  });
                },
                child: Text('Register'),
                color: Colors.blueAccent,
              )
            ],
          ),
        ),
        ),
    );
  }


  }
